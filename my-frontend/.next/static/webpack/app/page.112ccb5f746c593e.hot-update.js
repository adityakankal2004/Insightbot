"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/VoiceRecorder.tsx":
/*!******************************************!*\
  !*** ./app/components/VoiceRecorder.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VoiceRecorder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\nfunction VoiceRecorder(param) {\n    let { isRecording, setInputValue, setIsRecording, mode } = param;\n    _s();\n    const mediaRecorderRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [audioChunks, setAudioChunks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"VoiceRecorder.useEffect\": ()=>{\n            var _process_env_NEXT_PUBLIC_API_URL;\n            // Establish WebSocket on mount\n            const socketUrl = ((_process_env_NEXT_PUBLIC_API_URL = \"\") === null || _process_env_NEXT_PUBLIC_API_URL === void 0 ? void 0 : _process_env_NEXT_PUBLIC_API_URL.replace('http', 'ws')) + '/ws/voice';\n            wsRef.current = new WebSocket(socketUrl || '');\n            wsRef.current.onopen = ({\n                \"VoiceRecorder.useEffect\": ()=>{\n                    console.log(\"✅ WebSocket connected\");\n                }\n            })[\"VoiceRecorder.useEffect\"];\n            wsRef.current.onmessage = ({\n                \"VoiceRecorder.useEffect\": (event)=>{\n                    const data = JSON.parse(event.data);\n                    console.log(\"📩 Message from server:\", data);\n                    if (data.text) {\n                        setInputValue(data.text);\n                    }\n                    if (data.audio_url) {\n                        const audio = new Audio(data.audio_url);\n                        audio.play();\n                    }\n                }\n            })[\"VoiceRecorder.useEffect\"];\n            return ({\n                \"VoiceRecorder.useEffect\": ()=>{\n                    var _wsRef_current;\n                    (_wsRef_current = wsRef.current) === null || _wsRef_current === void 0 ? void 0 : _wsRef_current.close();\n                }\n            })[\"VoiceRecorder.useEffect\"];\n        }\n    }[\"VoiceRecorder.useEffect\"], [\n        setInputValue\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"VoiceRecorder.useEffect\": ()=>{\n            if (isRecording) {\n                startRecording();\n            } else {\n                stopRecording();\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"VoiceRecorder.useEffect\"], [\n        isRecording\n    ]);\n    const startRecording = async ()=>{\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            const recorder = new MediaRecorder(stream);\n            mediaRecorderRef.current = recorder;\n            setAudioChunks([]); // reset buffer\n            recorder.ondataavailable = (event)=>{\n                if (event.data.size > 0) {\n                    setAudioChunks((prev)=>[\n                            ...prev,\n                            event.data\n                        ]);\n                }\n            };\n            recorder.onstop = async ()=>{\n                const audioBlob = new Blob(audioChunks, {\n                    type: 'audio/webm'\n                });\n                setAudioChunks([]);\n                const reader = new FileReader();\n                reader.onloadend = ()=>{\n                    var _reader_result, _wsRef_current;\n                    const base64Audio = (_reader_result = reader.result) === null || _reader_result === void 0 ? void 0 : _reader_result.toString().split(',')[1]; // remove \"data:...\" prefix\n                    if (((_wsRef_current = wsRef.current) === null || _wsRef_current === void 0 ? void 0 : _wsRef_current.readyState) === WebSocket.OPEN && base64Audio) {\n                        wsRef.current.send(JSON.stringify({\n                            mode,\n                            audio: base64Audio\n                        }));\n                    } else {\n                        console.error(\"❌ WebSocket is not open or base64 is empty\");\n                    }\n                };\n                reader.readAsDataURL(audioBlob);\n            };\n            recorder.start();\n        } catch (err) {\n            console.error('🎙️ Microphone error:', err);\n            setIsRecording(false);\n        }\n    };\n    const stopRecording = ()=>{\n        var _mediaRecorderRef_current, _mediaRecorderRef_current1;\n        (_mediaRecorderRef_current = mediaRecorderRef.current) === null || _mediaRecorderRef_current === void 0 ? void 0 : _mediaRecorderRef_current.stop();\n        (_mediaRecorderRef_current1 = mediaRecorderRef.current) === null || _mediaRecorderRef_current1 === void 0 ? void 0 : _mediaRecorderRef_current1.stream.getTracks().forEach((track)=>track.stop());\n    };\n    return null; // UI is handled in ChatInput or elsewhere\n}\n_s(VoiceRecorder, \"oTduv7ClOqfqlAvWuWmq/lGeKNc=\");\n_c = VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/VoiceRecorder.tsx\n"));

/***/ })

});